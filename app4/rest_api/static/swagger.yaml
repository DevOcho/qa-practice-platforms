openapi: 3.0.0
info:
  title: Employee API
  description: API Provides access to fake Employee data for QA testing purposes.
  version: 1.0.0
host: 127.0.0.1:8803
basePath: /
schemes:
  - http
paths:
  /employee:
    get:
      tags:
        - employee
      summary: Returns a list of employees
      produces:
        - application/json
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/employee'
    post:
      tags:
        - employee
      summary: Create a new employee
      produces:
        - application/json
      requestBody:
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: Name of the employee
                title:
                  type: string
                  description: Employee's job title
                fired:
                  type: boolean
                  description: true = employee was fired and false = employee is still hired
                hired_at:
                  type: date
                  description: the date the employee started.
                fired_at:
                  type: date
                  description: Optional field.  Date employee was fired.
              required:
                - name
                - title
                - fired
                - hired_at
      responses:
        201:
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/employee'
  /employee/{eid}:
    get:
      tags:
        - employee
      summary: Returns information for a specific employee
      produces:
        - application/json
      parameters:
        - in: path
          name: eid
          required: true
          type: integer
          minimum: 1
          description: Employee ID
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/employee'
    put:
      tags:
        - employee
      summary: Update an entire single employee record
      produces:
        - application/json
      parameters:
        - in: path
          name: eid
          required: true
          type: integer
          minimum: 1
          description: Employee ID
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/employee'
      requestBody:
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                name:          # <!--- form field name
                  type: string
                title:    # <!--- form field name
                  type: string
                fired:
                  type: boolean
                hired_at:
                  type: date
                fired_at:
                  type: date
              required:
                - name
                - title
                - fired
                - hired_at
    patch:
      tags:
        - employee
      summary: Update portions of an employee record
      produces:
        - application/json
      parameters:
        - in: path
          name: eid
          required: true
          type: integer
          minimum: 1
          description: Employee ID
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/employee'
      requestBody:
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                name:          # <!--- form field name
                  type: string
                title:    # <!--- form field name
                  type: string
                fired:
                  type: boolean
                hired_at:
                  type: date
                fired_at:
                  type: date
    delete:
      tags:
        - employee
      summary: Delete a single employee record
      parameters:
        - in: path
          name: eid
          required: true
          type: integer
          minimum: 1
          description: Employee ID.
      responses:
        204:
          description: No Content

components:
  schemas:
    employee:
      type: object
      properties:
        id:
          type: integer
          example: 15
        name:
          type: string
          example: "Julie Pyatt"
        title:
          type: string
          example: "La Jefa"
        fired:
          type: boolean
          example: "false"
        hired_at:
          type: datetime
          example: "2023-07-11 08:00:00"
        fired_at:
          type: datetime
          example: ""
